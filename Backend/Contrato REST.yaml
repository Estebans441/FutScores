openapi: 3.0.0
info:
  title: FutScores API
  version: 1.0.0
  description: API for managing football matches and events

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /matches:
    post:
      summary: Create a new match
      description: Creates a new football match
      tags:
        - matches
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '201':
          description: Match created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Get all matches
      description: Retrieve all matches
      tags:
        - matches
      responses:
        '200':
          description: List of matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /matches/{id}:
    get:
      summary: Get a match
      description: Retrieve a match by its ID
      tags:
        - matches
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Match ID
      responses:
        '200':
          description: Match data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        '404':
          description: Match not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a match
      description: Update details of an existing match
      tags:
        - matches
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Match ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '200':
          description: Match updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        '404':
          description: Match not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a match
      description: Delete a match by its ID
      tags:
        - matches
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Match ID
      responses:
        '200':
          description: Match deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Match deleted successfully
        '404':
          description: Match not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /matches/{id}/events:
    get:
      summary: Get all events for a match
      description: Retrieve all events for a specific match
      tags:
        - events
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Match ID
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /events:
    post:
      summary: Create an event
      description: Creates a new event for a match
      tags:
        - events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /events/{id}:
    get:
      summary: Get an event
      description: Retrieve an event by its ID
      tags:
        - events
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Event ID
      responses:
        '200':
          description: Event data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update an event
      description: Update details of an existing event
      tags:
        - events
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Event ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete an event
      description: Delete an event by its ID
      tags:
        - events
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Event ID
      responses:
        '200':
          description: Event deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event deleted successfully
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Match:
      type: object
      properties:
        id:
          type: integer
        homeTeam:
          type: string
        homeTeamAbbr:
          type: string
        homeImg:
          type: string
        awayTeam:
          type: string
        awayTeamAbbr:
          type: string
        awayImg:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
    Event:
      type: object
      properties:
        matchId:
          type: integer
        team:
          type: string
        player:
          type: string
        type:
          type: string
          enum:
            - goal
            - penalty
            - red card
            - yellow card
            - substitution
            - offside
            - corner kick
            - free kick
            - start
            - half-time
            - end
        minute:
          type: integer

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Error message"
